<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Contribution Graph</title>
    <style>
        :root {
            --color-text-light: #255DF6;
            --color-dot-bg-0-light: #EBEDF0;
            --color-dot-bg-1-light: #A7BEFB;
            --color-dot-bg-2-light: #628BF9;
            --color-dot-bg-3-light: #4071F7;
            --color-dot-bg-4-light: #255DF6;
            --color-dot-border-light: rgb(0 0 0 / 0.06);

            --color-text-dark: #255DF6;
            --color-dot-bg-0-dark: #171B21;
            --color-dot-bg-1-dark: #152A62;
            --color-dot-bg-2-dark: #2048B3;
            --color-dot-bg-3-dark: #1951EB;
            --color-dot-bg-4-dark: #0048FF;
            --color-dot-border-dark: rgb(0 0 0 / 0.06);

            --default-delay: 1s;
            --default-duration: 1.55s;
            --default-stagger: 0.1s;

            --animate-in-menu-delay: calc(var(--default-delay) + var(--default-stagger) * 0);
            --animate-in-links-delay: calc(var(--default-delay) + var(--default-stagger) * 1);
            --animate-in-contributions-delay: calc(var(--default-delay) + var(--default-stagger) * 5);
            --animate-in-readme-delay: calc(var(--default-delay) + var(--default-stagger) * 6);
            --animate-in-copy-delay: calc(var(--default-delay) + var(--default-stagger) * 7);
            --animate-in-graph-delay: calc(var(--default-delay) + var(--default-stagger) * 17);
        }

        [data-theme="dark"] {
            --color-text: var(--color-text-dark);
            --color-dot-bg-0: var(--color-dot-bg-0-dark);
            --color-dot-bg-1: var(--color-dot-bg-1-dark);
            --color-dot-bg-2: var(--color-dot-bg-2-dark);
            --color-dot-bg-3: var(--color-dot-bg-3-dark);
            --color-dot-bg-4: var(--color-dot-bg-4-dark);
            --color-dot-border: var(--color-dot-border-dark);
        }

        [data-theme="light"] {
            --color-text: var(--color-text-light);
            --color-dot-bg-0: var(--color-dot-bg-0-light);
            --color-dot-bg-1: var(--color-dot-bg-1-light);
            --color-dot-bg-2: var(--color-dot-bg-2-light);
            --color-dot-bg-3: var(--color-dot-bg-3-light);
            --color-dot-bg-4: var(--color-dot-bg-4-light);
            --color-dot-border: var(--color-dot-border-light);
        }

        *,
        *::before,
        *::after {
            box-sizing: border-box;
        }

        body {
            margin: 0;
            font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", "Noto Sans", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji";
            color: var(--color-text);
        }

        .wrapper {
            contain: strict;
            block-size: 290px;
            container-type: inline-size;
            position: relative;
            overflow: clip;
        }

        .grid {
            display: grid;
            grid-template-columns: repeat(6, 1fr);
        }

        .intro {
            contain: content;
            grid-area: 1 / 1 / span 1 / span 6;
            font-size: 18px;
            font-weight: 300;
        }

        .graph {
            --delay: var(--animate-in-graph-delay);
            grid-area: 2 / 1 / span 1 / span 6;
        }

        .years {
            display: flex;
            gap: 5px;
            contain: strict;
            will-change: transform;
            backface-visibility: hidden;
            transform: translateZ(0);
            animation: scroll 30s linear infinite, fade-in 2.5s ease-out;
            animation-delay: 2s, var(--animate-in-graph-delay);
            transition: animation-play-state 0.3s;
        }

        .years:hover {
            animation-play-state: paused;
        }

        .year {
            contain: strict;
            content-visibility: auto;
        }

        .year__days {
            contain: content;
            display: grid;
            grid-auto-flow: column;
            grid-template-rows: repeat(6, 24px);
            grid-auto-columns: 24px;
            gap: 5px;
        }

        .dot {
            contain: strict;
            content-visibility: auto;
            aspect-ratio: 1;
            width: 24px;
            height: 24px;
            border: 1.8px solid var(--color-dot-border);
            border-radius: 3.6px;
            will-change: transform;
            transition: transform 0.3s;
        }

        .dot:hover {
            transform: scale(1.2);
        }

        .dot--0 { background-color: var(--color-dot-bg-0); }
        .dot--1 { background-color: var(--color-dot-bg-1); }
        .dot--2 { background-color: var(--color-dot-bg-2); }
        .dot--3 { background-color: var(--color-dot-bg-3); }
        .dot--4 { background-color: var(--color-dot-bg-4); }

        .sticky-note {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background-color: #feff9c;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
            z-index: 1000;
        }

        .close-btn {
            position: absolute;
            top: 5px;
            right: 5px;
            background: none;
            border: none;
            font-size: 20px;
            cursor: pointer;
        }

        @keyframes scroll {
            0% {
                transform: translateX(60px);
            }
            100% {
                transform: translateX(calc(-100% + 100cqw));
            }
        }

        @keyframes fade-in {
            0% {
                opacity: 0;
            }
            100% {
                opacity: 1;
            }
        }

        @media (width > 550px) {
            .intro {
                grid-area: 1 / 3 / span 1 / span 4;
                font-size: 22px;
            }
        }

        @media (width > 700px) {
            .intro {
                grid-area: 1 / 4 / span 1 / span 3;
            }
        }
    </style>
</head>
<body>
    <div class="wrapper grid">
        <article class="intro">
            <p>I'm Terkel. A Brooklyn-based internet enthusiast, creative technologist and maker of digital ephemera.</p>
        </article>
        <article class="graph">
            <div class="years"></div>
        </article>
    </div>

    <script>
        let contributionData;

        fetch('path/to/your/data.json')
            .then(response => response.json())
            .then(data => {
                contributionData = data;
                renderGraph(data);
            });

        function renderGraph(data) {
            const graphContainer = document.querySelector('.years');
            graphContainer.innerHTML = ''; // Clear existing content

            data.forEach((yearData, yearIndex) => {
                const yearElement = document.createElement('div');
                yearElement.className = `year year--${yearIndex}`;
                yearElement.style = `--w: ${yearData.length * 29}; --h: 169;`; // Adjust width based on data points

                const daysElement = document.createElement('div');
                daysElement.className = 'year__days';

                yearData.forEach((dayData, dayIndex) => {
                    const dotElement = document.createElement('div');
                    dotElement.className = `dot dot--${dayData.level}`;
                    dotElement.dataset.year = yearIndex;
                    dotElement.dataset.day = dayIndex;
                    daysElement.appendChild(dotElement);
                });

                yearElement.appendChild(daysElement);
                graphContainer.appendChild(yearElement);
            });
        }

        function showDataPoint(year, day) {
            const data = contributionData[year][day];
            const note = document.createElement('div');
            note.className = 'sticky-note';
            note.innerHTML = `
                <button class="close-btn">&times;</button>
                <h3>${data.title}</h3>
                <p>${data.content}</p>
            `;
            document.body.appendChild(note);

            note.querySelector('.close-btn').addEventListener('click', () => {
                document.body.removeChild(note);
            });
        }

        // Add event listener to dots
        document.querySelector('.years').addEventListener('click', (event) => {
            if (event.target.classList.contains('dot')) {
                const year = event.target.dataset.year;
                const day = event.target.dataset.day;
                showDataPoint(year, day);
            }
        });
    </script>
</body>
</html>